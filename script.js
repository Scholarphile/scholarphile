// Minimal, functional front-end
document.addEventListener('DOMContentLoaded', () => {
  const docsEl = document.getElementById('docs');
  const q = document.getElementById('q');
  const btn = document.getElementById('searchBtn');

  const seed = [
    { id:'aw-guide', title:'Academic Writing Excellence', badge:'Guide', pages:24, fmt:'PDF' },
    { id:'proposal', title:'Research Proposal Template', badge:'Template', pages:12, fmt:'DOCX' },
    { id:'citation', title:'Citation Style Quick Reference', badge:'Reference', pages:8, fmt:'PDF' },
    { id:'ethics', title:'Research Ethics Checklist', badge:'Checklist', pages:6, fmt:'PDF' }
  ];

  function render(list){
    docsEl.innerHTML = list.map(d => `
      <article class="card">
        <span class="badge">${d.badge}</span>
        <div class="title">${d.title}</div>
        <div class="meta">${d.pages} pages â€¢ ${d.fmt}</div>
        <div class="actions">
          <button class="btn" data-id="${d.id}">Download</button>
        </div>
      </article>`).join('');
  }

  function downloadDoc(item){
    const content = `${item.title}\n\nGenerated by Scholarphile. Format: ${item.fmt}. Pages: ${item.pages}.`;
    const blob = new Blob([content], { type:'text/plain' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url; a.download = `${item.title.replace(/\s+/g,'-').toLowerCase()}.${item.fmt.toLowerCase()}`;
    document.body.appendChild(a); a.click(); a.remove(); URL.revokeObjectURL(url);
  }

  // Initial render
  render(seed);

  // Search
  function doSearch(){
    const term = (q.value || '').trim().toLowerCase();
    const results = term ? seed.filter(d => d.title.toLowerCase().includes(term)) : seed;
    render(results);
  }
  btn.addEventListener('click', doSearch);
  q.addEventListener('keydown', e => { if (e.key === 'Enter') doSearch(); });

  // Delegated download
  docsEl.addEventListener('click', (e) => {
    const id = e.target && e.target.dataset && e.target.dataset.id;
    if (!id) return;
    const item = seed.find(x => x.id === id);
    if (item) downloadDoc(item);
  });
});
